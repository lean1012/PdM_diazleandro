#ifndef __API_delay_H
#define __API_delay_H

//include uint8_t
#include <stdint.h>
// include bool
#include <stdbool.h>
#include "stm32f4xx_hal.h"  		/* <- HAL include */


typedef uint32_t tick_t;

typedef bool bool_t;

typedef struct{
   tick_t startTime;
   tick_t duration;
   bool_t running;
} delay_t;

/*
 * @brief Init delay
 * @param [in] delay: pointer to struct delay
 * @param [in] duration: duration in ms
 */
void delayInit( delay_t * delay, tick_t duration );

/*
 * @brief struct delay
 * @param [in] delay: pointer to struct delay
 * @param [in] duration: duration in ms
 * @return true if time ended.
 */
bool_t delayRead( delay_t * delay );

/*
 * @brief Modifica la duracion de un delay
 * @param [in] delay: puntero a la variable que almacena el delay
 * @param [in] duration: la duracion del delay
 */
void delayWrite( delay_t * delay, tick_t duration );


#endif
